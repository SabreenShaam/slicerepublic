# slicerepublic-stage.conf

# the upstream component nginx needs to connect to
upstream django {
    server unix:///home/ubuntu/slice/slicerepublic/slicerepublic.sock; # for a file socket
}

server {
    listen      8000;
    server_name ec2-52-30-123-189.eu-west-1.compute.amazonaws.com;

    charset     utf-8;

    # max upload size
    client_max_body_size 75M;   # adjust to taste

    access_log /home/ubuntu/slice/logs/nginx-access.log;
    error_log /home/ubuntu/slice/logs/nginx-error.log;

    location /media  {
        # try_files $uri $uri/ =404;  # your Django project's media files - amend as required
        alias /home/ubuntu/slice/slicerepublic/media;
    }

    location /static {
        alias /home/ubuntu/slice/slicerepublic/static_root; # your Django project's static files - amend as required
    }

    location / {
        rewrite ^ https://$host$request_uri? permanent;
    }
}

# configuration of the server
server {
    # the port your site will be served on
    listen      443 ssl;

    # the domain name it will serve for
    server_name ec2-52-30-123-189.eu-west-1.compute.amazonaws.com; # substitute your machine's IP address or FQDN
    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;
    charset     utf-8;

    # max upload size
    client_max_body_size 75M;   # adjust to taste

    access_log /home/ubuntu/slice/logs/nginx-access.log;
    error_log /home/ubuntu/slice/logs/nginx-error.log;

    # Django media
    location /media  {
        # try_files $uri $uri/ =404;  # your Django project's media files - amend as required
        alias /home/ubuntu/slice/slicerepublic/media;
    }

    location /static {
        alias /home/ubuntu/slice/slicerepublic/static_root; # your Django project's static files - amend as required
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django;
        include     uwsgi_params; # the uwsgi_params file you installed
    }
}
